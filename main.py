import time
import sys

import PyQt5.QtGui
from PyQt5.QtCore import QObject, QThread, pyqtSignal, pyqtSlot,QSize,QRect
from PyQt5.QtWidgets import QApplication, QPushButton, QTextEdit, QVBoxLayout, QWidget,QMainWindow,QApplication,QPlainTextEdit
from ui_pyqt import Ui_MainWindow
from verifyWindow import Ui_verifyWindow
import pyaudio
import wave
import numpy as np
import struct
import subprocess
import shlex

FORMAT = pyaudio.paInt16
CHANNELS = 1
RATE = 16000
CHUNK = 1024
LEVEL = 100 # threshold
COUNT_NUM = 8 # NUM_SAMPLES个取样之内出现COUNT_NUM个大于LEVEL的取样则记录声音
SAVE_LENGTH = 20         #声音记录的最小长度：SAVE_LENGTH * NUM_SAMPLES 个取样

class Recorder(QObject):
    """
    Must derive from QObject in order to emit signals, connect slots to other signals, and operate in a QThread.
    """

    sig_step = pyqtSignal(np.ndarray)  # return record array for draw chart

    frames=[]

    def __init__(self):
        super().__init__()
        self.__abort = False

    def readData(self,block):
        count = len(block)/2
        format = "%dh"%(count)
        shorts = struct.unpack( format, block )
        return np.array(shorts)

    @pyqtSlot()
    def work(self):
        """
        Pretend this worker method does work that takes a long time. During this time, the thread's
        event loop is blocked, except if the application's processEvents() is called: this gives every
        thread (incl. main) a chance to process events, which in this sample means processing signals
        received from GUI (such as abort).
        """
        thread_name = QThread.currentThread().objectName()
        thread_id = int(QThread.currentThreadId())  # cast to int() is necessary
        print("*  recording")

        self.pa = pyaudio.PyAudio()
        self.stream = self.pa.open(format=FORMAT,
                                   channels=CHANNELS,
                                   rate=RATE,
                                   input=True,
                                   frames_per_buffer=CHUNK)
        save_count = 0

        while 1:
            # time.sleep(0.05)
            ### record
            data = self.stream.read(CHUNK)
            audio_data = np.fromstring(data, dtype=np.short)
            large_sample_count = np.sum( audio_data > LEVEL )
            print(np.max(audio_data))

            # if large_sample_count > COUNT_NUM:
            #     save_count = SAVE_LENGTH
            # else:
            #     save_count -= 1
            #
            # if save_count < 0:
            #     save_count = 0
            #
            # if save_count > 0 :
            #     self.frames.append(data)
            # else:
            #     if len(self.frames) > 0 :
            #         self.Voice_String = self.frames
            #         save_buffer = []
            #         print("Recode a piece of  voice successfully!")
            #         return True

            self.frames.append(data)
            r_data = self.readData(data)

            ###
            self.sig_step.emit(r_data)
            app.processEvents()  # this could cause change to self.__abort
            if self.__abort:
                break

    def abort(self):
        print("* end recording")
        self.stream.stop_stream()
        self.stream.close()
        self.pa.terminate()

        # WAVE_OUTPUT_FILENAME = self.nameText.toPlainText() + ".wav"
        WAVE_OUTPUT_FILENAME = "test.wav"

        # original version
        wf = wave.open(WAVE_OUTPUT_FILENAME, 'wb')
        wf.setnchannels(CHANNELS)
        # wf.setsampwidth(self.pa.get_sample_size(FORMAT))
        wf.setsampwidth(2)

        wf.setframerate(RATE)
        # wf.writeframes(b''.join(self.frames))
        wf.writeframes(np.array(self.frames).tostring())

        wf.close()

#         ## new version append white sound
#         wf = wave.open(WAVE_OUTPUT_FILENAME, 'wb')
#         wf.setnchannels(CHANNELS)
#         wf.setsampwidth(self.pa.get_sample_size(FORMAT))
#         wf.setframerate(RATE)
#         ff = self.frames[:-6]
#         ff.append(b'\x08\xff\xf0\xfe\xf6\xfe+\xff\x82\xff\xac\xff\xa8\xff\x87\xffG\xff\x1c\xff\xf2\xfe\xd1\xfe\xa8\xfe}\xfe`\xfe?\xfe2\xfeh\xfe\xb6\xfe\x08\xffy\xff\xbd\xff\xbe\xffj\xff\xdc\xfex\xfe\x1e\xfe\xff\xfd<\xfe\x7f\xfe\xab\xfe\xdc\xfe\x10\xff%\xff$\xff*\xff/\xff<\xffC\xff\x18\xff\xe0\xfe\xb0\xfeh\xfe"\xfe\xf0\xfd\xc7\xfd\xc8\xfd\xe8\xfd\xfe\xfd\xfd\xfd\xe3\xfd\xb1\xfd\x8d\xfd|\xfd\xbb\xfd"\xfee\xfe\xc2\xfe\x03\xff+\xff:\xff\x1b\xff\n\xff\xef\xfe\xdb\xfe\xd2\xfe\xaf\xfe\xde\xfe\x14\xffO\xff\xa6\xff\xc1\xff\xfc\xff$\x00\x04\x00\xe8\xff\x9f\xffY\xff;\xffB\xff\x85\xff\xdc\xff"\x00e\x00\x7f\x00\x81\x00\x97\x00\xac\x00\xd2\x00\xfc\x00\xf9\x00\xd8\x00\x8c\x00+\x00\xfd\xff\xe3\xff\xd1\xff\xf2\xff\r\x00\x17\x00.\x00&\x00 \x00,\x007\x00N\x00\x82\x00\xb1\x00\xdd\x00 \x01+\x01\x19\x01\xf6\x00\x9d\x00Y\x00#\x00\x1f\x00I\x00q\x00\xa4\x00\xc3\x00\xde\x00\xc7\x00\xbe\x00\xd8\x00\xc5\x00\xa1\x00\x87\x00\x81\x00\x7f\x00|\x00\xa4\x00\xda\x00\xf1\x00\x04\x01\x12\x01+\x01J\x01`\x01\x82\x01\x9f\x01\x97\x01v\x01\x11\x01{\x00\xf4\xffw\xff%\xff\xf5\xfe\xfd\xfe2\xff{\xff\xeb\xff-\x00M\x00J\x00,\x00\x17\x00\n\x00!\x00S\x00\x8f\x00\xb5\x00\xa9\x00\x85\x00[\x00&\x00\x02\x00\x0f\x00#\x00K\x00l\x00\x86\x00\xa6\x00\xb3\x00\xc4\x00\xd6\x00\xd1\x00\xcd\x00\xc6\x00\xb6\x00\xb8\x00\xe8\x00E\x01\x90\x01\xc2\x01\xe6\x01\xf4\x01 \x02U\x02\x8e\x02\xe8\x02+\x038\x03\x16\x03\xdf\x02\xa9\x02p\x02V\x02T\x02q\x02\x97\x02\xca\x02\x07\x03:\x03L\x03E\x035\x03\xfd\x02\xc4\x02\x8f\x02r\x02V\x02\x1a\x02\xed\x01\xdf\x01\xb0\x01\x82\x01\x8e\x01\xb3\x01\xf8\x01U\x02b\x02T\x02O\x02 \x02\xe3\x01\xb4\x01\x9c\x01\x98\x01\x85\x01\x83\x01\xaa\x01\xf5\x01^\x02\xb4\x02\xe7\x02\xff\x02\xf0\x02\x9d\x02I\x02"\x02\n\x02#\x02p\x02\xb6\x02\xdb\x02\xd6\x02\xc4\x02\xac\x02\x90\x02\x8c\x02\xb1\x02\xd6\x02\x0c\x03]\x03\x89\x03\x8c\x03\x9d\x03\x9b\x03e\x03\x1c\x03\xeb\x02\xe6\x02\xcf\x02\xb5\x02\x91\x02B\x02#\x02G\x02m\x02\x89\x02\x8f\x02\x81\x02L\x02\x16\x02\xe8\x01\x9c\x01\x85\x01j\x01\x1a\x01\xdb\x00\x9f\x00\x8d\x00\xad\x00\xed\x00<\x01l\x01n\x01<\x01\xe7\x00\xa2\x00q\x00p\x00\xbe\x00\t\x01P\x01\x8d\x01\x9c\x01\x97\x01s\x01<\x01\'\x01-\x01;\x01S\x01f\x01|\x01\x90\x01|\x01Q\x01@\x01)\x010\x01@\x01E\x01I\x01G\x01G\x01B\x01M\x01S\x01j\x01\x8e\x01\xa0\x01\xcd\x01\xc3\x01\xa5\x01\x91\x01?\x01\xef\x00\xb3\x00x\x00P\x005\x00:\x00a\x00\x97\x00\xd7\x00\x00\x01\xfe\x00\xb9\x008\x00\xce\xff\x9e\xff\x81\xff~\xff\x99\xff\xdb\xff0\x00l\x00\x9c\x00\xbf\x00\xb4\x00\x9e\x00\xb7\x00\xdc\x00\x11\x01)\x01:\x01U\x01>\x016\x01@\x01P\x01b\x01i\x01Y\x01:\x01&\x01\'\x01G\x01y\x01\xb4\x01\xf0\x01<\x02\x95\x02\xdf\x02\xdc\x02q\x02\xfd\x01\xac\x01~\x01b\x01n\x01y\x01u\x01l\x01V\x01b\x01Z\x01O\x015\x01\xec\x00\x98\x00<\x00\xfb\xff\t\x007\x00u\x00\xbd\x00\xe8\x00\xfa\x00\xf4\x00\xd7\x00\xc9\x00\xf0\x00E\x01\x85\x01\x92\x01n\x01!\x01\xe8\x00\xc4\x00\xa7\x00\xb1\x00\xe4\x00\x06\x01&\x01P\x01h\x01h\x01L\x010\x017\x01U\x01\x98\x01\xf5\x01G\x02z\x02Q\x02\xe0\x01w\x01\x07\x01\xb5\x00\xa5\x00\xb6\x00\xf6\x00H\x01c\x01e\x01W\x012\x01\xf8\x00\xb7\x00|\x004\x00\x0e\x00\xf6\xff\xe6\xff,\x00n\x00\x9b\x00\xb0\x00\xab\x00\xb7\x00\x99\x00i\x00z\x00\x9a\x00\x82\x00<\x00\xe6\xff\x95\xff<\xff\x1e\xffB\xff\x8f\xff\x05\x00t\x00\xf1\x00_\x01\xa9\x01\xdd\x01\xf4\x01\x1f\x029\x02_\x02}\x02q\x02b\x02Q\x02/\x02\x0f\x02\x05\x02\x02\x026\x02f\x02~\x02\x97\x02y\x02Z\x02*\x02\xef\x01\xb4\x01t\x01Q\x010\x01-\x010\x01=\x01n\x01\x81\x01o\x015\x01\x06\x01\xfd\x00\xf2\x00\xe7\x00\xf6\x00\x1f\x01\x1d\x01\xf3\x00\x98\x00\x1b\x00\xb9\xffr\xff[\xff{\xff\xcd\xff+\x00\x94\x00\xde\x00\xdf\x00\xd4\x00\xba\x00\x9c\x00\x97\x00~\x00\x87\x00\xba\x00\xe0\x00\xf2\x00\xe9\x00\xdc\x00\xe2\x00\xd4\x00\xd8\x00!\x01{\x01\xc0\x01\xf8\x01\xe7\x01\xa3\x01e\x01\x02\x01\xc0\x00\xaa\x00\x99\x00\xb1\x00\xf1\x00%\x01v\x01\xc0\x01\xcb\x01\xac\x01C\x01\xe1\x00\x91\x00X\x00f\x00s\x00\x88\x00\xa6\x00\x8c\x00g\x00F\x002\x002\x00C\x00v\x00\x8c\x00\x8c\x00\x87\x00\x80\x00\x85\x00}\x00w\x00x\x00\x8d\x00\xa9\x00\xb9\x00\xca\x00\xdc\x00\xcc\x00\xb4\x00\xc2\x00\xd2\x00\t\x01s\x01\xd0\x01\x10\x02\x1c\x022\x029\x02\x15\x02 \x02\x0b\x02\xd5\x01\xcf\x01\xc3\x01\xc2\x01\xff\x01J\x02\x80\x02\xaa\x02\xa4\x02o\x02\x12\x02\x90\x01:\x01\x0b\x01\xd2\x00\xb7\x00\xba\x00\xca\x00\xc8\x00\xa3\x00\x86\x00t\x00?\x00\x1c\x00\x18\x00,\x00N\x00-\x00\x03\x00\xda\xff\x9c\xffn\xffF\xff+\xff\x1e\xff\x12\xff\x17\xff\x1a\xff2\xffD\xffG\xffp\xff\x94\xff\xc5\xff\x00\x00"\x00K\x00T\x009\x00\x13\x00\xe0\xff\xbd\xff\x94\xff|\xffv\xff\x9c\xff\xbe\xff\xf6\xff]\x00\x95\x00\x9e\x00\x9b\x00X\x00\xda\xffx\xff\x15\xff\xee\xfe\xfb\xfe\x16\xffX\xff\xa3\xff\xcd\xff\xca\xff\xc1\xff\x96\xffs\xff[\xff.\xff\x1b\xff\xf3\xfe\xd0\xfe\xb6\xfe\x9c\xfe\xa0\xfe\xb3\xfe\xe4\xfe\x01\xff\x16\xff\x1d\xff\x1b\xff%\xff\x1f\xff\x1c\xffI\xff\x96\xff\xd7\xff\xf4\xff\xf9\xff\xf0\xff\xc3\xff^\xff\xe4\xfe\xaf\xfe\x8d\xfe[\xfeS\xfe\x81\xfe\xb8\xfe\xe8\xfe\x19\xff*\xff\x0f\xff\xe9\xfe\xc0\xfe|\xfe)\xfe\xf2\xfd\xea\xfd!\xfe\x82\xfe\xea\xfeA\xffy\xff\x98\xff\x88\xffd\xffg\xffu\xffg\xff@\xff\x05\xff\xdb\xfe\xaa\xfeq\xfeR\xfeb\xfe~\xfe~\xfe\x8b\xfe\xba\xfe\xb5\xfe\x88\xfeo\xfeR\xfe\\\xfe~\xfe\xa4\xfe\xc6\xfe\xc8\xfe\xbb\xfe\x8f\xfe-\xfe\xc1\xfd\x86\xfd\x85\xfd\x9c\xfd\xca\xfd\x00\xfe:\xfe}\xfe\xbb\xfe\xdb\xfe\xe2\xfe\xd5\xfe\xae\xfe\x88\xfek\xfe%\xfe\xfb\xfd\xf2\xfd\xe9\xfd\x03\xfe\x1f\xfeN\xfeq\xfe|\xfe\x80\xfe{\xfe\x84\xfe\x8d\xfe\x7f\xfe\x84\xfeZ\xfe\xf9\xfd\xbf\xfd\x95\xfd\x9d\xfd\xe5\xfdB\xfe\xb0\xfe(\xffq\xff\x90\xff\x86\xffN\xff$\xff\x0e\xff\x1c\xff7\xff8\xff5\xff\xff\xfe\xd2\xfe\xb5\xfe\x8c\xfe\x86\xfe\xba\xfe\xfa\xfe\r\xff\x10\xff\xf1\xfe\xe1\xfe\xd0\xfe\xb4\xfe\xb5\xfe\xba\xfe\xc5\xfe\xe4\xfe\r\xff.\xffK\xffa\xffw\xff\x8f\xff\xb9\xff\xda\xff\xe8\xff\xfb\xff\t\x005\x00[\x00i\x00_\x00 \x00\xe2\xff\x97\xff?\xff\x08\xff\r\xffi\xff\xdc\xff%\x00L\x00S\x008\x00\x03\x00\xcf\xff\xa3\xff\x8a\xff\x99\xff~\xff5\xff*\xff\xf7\xfe\x90\xfee\xfeq\xfe\xc2\xfe\x0f\xff0\xffW\xffC\xff\xf8\xfe\xbe\xfeo\xfe(\xfe\xf1\xfd\xc4\xfd\x90\xfdo\xfdw\xfd\x9d\xfd\xf9\xfdH\xfeq\xfe\x83\xfe[\xfe\x05\xfe\xbf\xfd\x92\xfdl\xfdq\xfd\xb7\xfd\x19\xfeS\xfeP\xfeH\xfeJ\xfed\xfe}\xfe\xa8\xfe\x06\xffa\xff\xa0\xff\xbd\xff\xd7\xff\xdc\xff\xd4\xff\xd0\xff\xc8\xff\xc8\xff\xcf\xff\xde\xff\xe2\xff\xdb\xff\xce\xff\xf0\xff)\x00c\x00\xad\x00\xec\x00&\x01>\x019\x01\x1a\x01\xd4\x00\xae\x00\x90\x00R\x00\'\x00\n\x00\x13\x00_\x00\xca\x00\x1c\x01^\x01\x8a\x01\x87\x01e\x01\x1c\x01\xf8\x00\xe9\x00\xf7\x001\x01J\x01d\x01q\x01^\x01R\x01U\x01I\x01>\x01<\x014\x01&\x01\x14\x01\xd6\x00\x90\x00e\x00J\x00;\x00)\x00#\x00\x1f\x00\x0c\x00\xfd\xff\xda\xff\x98\xff\x9c\xff\x8e\xffs\xff\x91\xff\x92\xff\x8d\xff\xa4\xff\xc1\xff\xc5\xff\xa2\xff]\xff\xf8\xfe\xa6\xfer\xfes\xfe\xb4\xfe\x18\xff\x81\xff\xe5\xff,\x00\x14\x00\xc7\xffY\xff\xee\xfe\xa0\xfem\xfet\xfe\x9e\xfe\xbe\xfe\xf9\xfe?\xffZ\xffq\xffu\xffq\xff\x8a\xff\x99\xff\xa4\xff\xa2\xff\xcf\xff\xed\xff\xe1\xff\x13\x00"\x002\x00J\x003\x00\x16\x00\xef\xff\xde\xff\xcc\xff\xe6\xff\x15\x00@\x00\x9a\x00\xff\x00:\x01C\x018\x01\x14\x01\xd8\x00\xa6\x00v\x00N\x00P\x00O\x00f\x00\x95\x00'
# )
#         ff.append(
#             b'\x08\xff\xf0\xfe\xf6\xfe+\xff\x82\xff\xac\xff\xa8\xff\x87\xffG\xff\x1c\xff\xf2\xfe\xd1\xfe\xa8\xfe}\xfe`\xfe?\xfe2\xfeh\xfe\xb6\xfe\x08\xffy\xff\xbd\xff\xbe\xffj\xff\xdc\xfex\xfe\x1e\xfe\xff\xfd<\xfe\x7f\xfe\xab\xfe\xdc\xfe\x10\xff%\xff$\xff*\xff/\xff<\xffC\xff\x18\xff\xe0\xfe\xb0\xfeh\xfe"\xfe\xf0\xfd\xc7\xfd\xc8\xfd\xe8\xfd\xfe\xfd\xfd\xfd\xe3\xfd\xb1\xfd\x8d\xfd|\xfd\xbb\xfd"\xfee\xfe\xc2\xfe\x03\xff+\xff:\xff\x1b\xff\n\xff\xef\xfe\xdb\xfe\xd2\xfe\xaf\xfe\xde\xfe\x14\xffO\xff\xa6\xff\xc1\xff\xfc\xff$\x00\x04\x00\xe8\xff\x9f\xffY\xff;\xffB\xff\x85\xff\xdc\xff"\x00e\x00\x7f\x00\x81\x00\x97\x00\xac\x00\xd2\x00\xfc\x00\xf9\x00\xd8\x00\x8c\x00+\x00\xfd\xff\xe3\xff\xd1\xff\xf2\xff\r\x00\x17\x00.\x00&\x00 \x00,\x007\x00N\x00\x82\x00\xb1\x00\xdd\x00 \x01+\x01\x19\x01\xf6\x00\x9d\x00Y\x00#\x00\x1f\x00I\x00q\x00\xa4\x00\xc3\x00\xde\x00\xc7\x00\xbe\x00\xd8\x00\xc5\x00\xa1\x00\x87\x00\x81\x00\x7f\x00|\x00\xa4\x00\xda\x00\xf1\x00\x04\x01\x12\x01+\x01J\x01`\x01\x82\x01\x9f\x01\x97\x01v\x01\x11\x01{\x00\xf4\xffw\xff%\xff\xf5\xfe\xfd\xfe2\xff{\xff\xeb\xff-\x00M\x00J\x00,\x00\x17\x00\n\x00!\x00S\x00\x8f\x00\xb5\x00\xa9\x00\x85\x00[\x00&\x00\x02\x00\x0f\x00#\x00K\x00l\x00\x86\x00\xa6\x00\xb3\x00\xc4\x00\xd6\x00\xd1\x00\xcd\x00\xc6\x00\xb6\x00\xb8\x00\xe8\x00E\x01\x90\x01\xc2\x01\xe6\x01\xf4\x01 \x02U\x02\x8e\x02\xe8\x02+\x038\x03\x16\x03\xdf\x02\xa9\x02p\x02V\x02T\x02q\x02\x97\x02\xca\x02\x07\x03:\x03L\x03E\x035\x03\xfd\x02\xc4\x02\x8f\x02r\x02V\x02\x1a\x02\xed\x01\xdf\x01\xb0\x01\x82\x01\x8e\x01\xb3\x01\xf8\x01U\x02b\x02T\x02O\x02 \x02\xe3\x01\xb4\x01\x9c\x01\x98\x01\x85\x01\x83\x01\xaa\x01\xf5\x01^\x02\xb4\x02\xe7\x02\xff\x02\xf0\x02\x9d\x02I\x02"\x02\n\x02#\x02p\x02\xb6\x02\xdb\x02\xd6\x02\xc4\x02\xac\x02\x90\x02\x8c\x02\xb1\x02\xd6\x02\x0c\x03]\x03\x89\x03\x8c\x03\x9d\x03\x9b\x03e\x03\x1c\x03\xeb\x02\xe6\x02\xcf\x02\xb5\x02\x91\x02B\x02#\x02G\x02m\x02\x89\x02\x8f\x02\x81\x02L\x02\x16\x02\xe8\x01\x9c\x01\x85\x01j\x01\x1a\x01\xdb\x00\x9f\x00\x8d\x00\xad\x00\xed\x00<\x01l\x01n\x01<\x01\xe7\x00\xa2\x00q\x00p\x00\xbe\x00\t\x01P\x01\x8d\x01\x9c\x01\x97\x01s\x01<\x01\'\x01-\x01;\x01S\x01f\x01|\x01\x90\x01|\x01Q\x01@\x01)\x010\x01@\x01E\x01I\x01G\x01G\x01B\x01M\x01S\x01j\x01\x8e\x01\xa0\x01\xcd\x01\xc3\x01\xa5\x01\x91\x01?\x01\xef\x00\xb3\x00x\x00P\x005\x00:\x00a\x00\x97\x00\xd7\x00\x00\x01\xfe\x00\xb9\x008\x00\xce\xff\x9e\xff\x81\xff~\xff\x99\xff\xdb\xff0\x00l\x00\x9c\x00\xbf\x00\xb4\x00\x9e\x00\xb7\x00\xdc\x00\x11\x01)\x01:\x01U\x01>\x016\x01@\x01P\x01b\x01i\x01Y\x01:\x01&\x01\'\x01G\x01y\x01\xb4\x01\xf0\x01<\x02\x95\x02\xdf\x02\xdc\x02q\x02\xfd\x01\xac\x01~\x01b\x01n\x01y\x01u\x01l\x01V\x01b\x01Z\x01O\x015\x01\xec\x00\x98\x00<\x00\xfb\xff\t\x007\x00u\x00\xbd\x00\xe8\x00\xfa\x00\xf4\x00\xd7\x00\xc9\x00\xf0\x00E\x01\x85\x01\x92\x01n\x01!\x01\xe8\x00\xc4\x00\xa7\x00\xb1\x00\xe4\x00\x06\x01&\x01P\x01h\x01h\x01L\x010\x017\x01U\x01\x98\x01\xf5\x01G\x02z\x02Q\x02\xe0\x01w\x01\x07\x01\xb5\x00\xa5\x00\xb6\x00\xf6\x00H\x01c\x01e\x01W\x012\x01\xf8\x00\xb7\x00|\x004\x00\x0e\x00\xf6\xff\xe6\xff,\x00n\x00\x9b\x00\xb0\x00\xab\x00\xb7\x00\x99\x00i\x00z\x00\x9a\x00\x82\x00<\x00\xe6\xff\x95\xff<\xff\x1e\xffB\xff\x8f\xff\x05\x00t\x00\xf1\x00_\x01\xa9\x01\xdd\x01\xf4\x01\x1f\x029\x02_\x02}\x02q\x02b\x02Q\x02/\x02\x0f\x02\x05\x02\x02\x026\x02f\x02~\x02\x97\x02y\x02Z\x02*\x02\xef\x01\xb4\x01t\x01Q\x010\x01-\x010\x01=\x01n\x01\x81\x01o\x015\x01\x06\x01\xfd\x00\xf2\x00\xe7\x00\xf6\x00\x1f\x01\x1d\x01\xf3\x00\x98\x00\x1b\x00\xb9\xffr\xff[\xff{\xff\xcd\xff+\x00\x94\x00\xde\x00\xdf\x00\xd4\x00\xba\x00\x9c\x00\x97\x00~\x00\x87\x00\xba\x00\xe0\x00\xf2\x00\xe9\x00\xdc\x00\xe2\x00\xd4\x00\xd8\x00!\x01{\x01\xc0\x01\xf8\x01\xe7\x01\xa3\x01e\x01\x02\x01\xc0\x00\xaa\x00\x99\x00\xb1\x00\xf1\x00%\x01v\x01\xc0\x01\xcb\x01\xac\x01C\x01\xe1\x00\x91\x00X\x00f\x00s\x00\x88\x00\xa6\x00\x8c\x00g\x00F\x002\x002\x00C\x00v\x00\x8c\x00\x8c\x00\x87\x00\x80\x00\x85\x00}\x00w\x00x\x00\x8d\x00\xa9\x00\xb9\x00\xca\x00\xdc\x00\xcc\x00\xb4\x00\xc2\x00\xd2\x00\t\x01s\x01\xd0\x01\x10\x02\x1c\x022\x029\x02\x15\x02 \x02\x0b\x02\xd5\x01\xcf\x01\xc3\x01\xc2\x01\xff\x01J\x02\x80\x02\xaa\x02\xa4\x02o\x02\x12\x02\x90\x01:\x01\x0b\x01\xd2\x00\xb7\x00\xba\x00\xca\x00\xc8\x00\xa3\x00\x86\x00t\x00?\x00\x1c\x00\x18\x00,\x00N\x00-\x00\x03\x00\xda\xff\x9c\xffn\xffF\xff+\xff\x1e\xff\x12\xff\x17\xff\x1a\xff2\xffD\xffG\xffp\xff\x94\xff\xc5\xff\x00\x00"\x00K\x00T\x009\x00\x13\x00\xe0\xff\xbd\xff\x94\xff|\xffv\xff\x9c\xff\xbe\xff\xf6\xff]\x00\x95\x00\x9e\x00\x9b\x00X\x00\xda\xffx\xff\x15\xff\xee\xfe\xfb\xfe\x16\xffX\xff\xa3\xff\xcd\xff\xca\xff\xc1\xff\x96\xffs\xff[\xff.\xff\x1b\xff\xf3\xfe\xd0\xfe\xb6\xfe\x9c\xfe\xa0\xfe\xb3\xfe\xe4\xfe\x01\xff\x16\xff\x1d\xff\x1b\xff%\xff\x1f\xff\x1c\xffI\xff\x96\xff\xd7\xff\xf4\xff\xf9\xff\xf0\xff\xc3\xff^\xff\xe4\xfe\xaf\xfe\x8d\xfe[\xfeS\xfe\x81\xfe\xb8\xfe\xe8\xfe\x19\xff*\xff\x0f\xff\xe9\xfe\xc0\xfe|\xfe)\xfe\xf2\xfd\xea\xfd!\xfe\x82\xfe\xea\xfeA\xffy\xff\x98\xff\x88\xffd\xffg\xffu\xffg\xff@\xff\x05\xff\xdb\xfe\xaa\xfeq\xfeR\xfeb\xfe~\xfe~\xfe\x8b\xfe\xba\xfe\xb5\xfe\x88\xfeo\xfeR\xfe\\\xfe~\xfe\xa4\xfe\xc6\xfe\xc8\xfe\xbb\xfe\x8f\xfe-\xfe\xc1\xfd\x86\xfd\x85\xfd\x9c\xfd\xca\xfd\x00\xfe:\xfe}\xfe\xbb\xfe\xdb\xfe\xe2\xfe\xd5\xfe\xae\xfe\x88\xfek\xfe%\xfe\xfb\xfd\xf2\xfd\xe9\xfd\x03\xfe\x1f\xfeN\xfeq\xfe|\xfe\x80\xfe{\xfe\x84\xfe\x8d\xfe\x7f\xfe\x84\xfeZ\xfe\xf9\xfd\xbf\xfd\x95\xfd\x9d\xfd\xe5\xfdB\xfe\xb0\xfe(\xffq\xff\x90\xff\x86\xffN\xff$\xff\x0e\xff\x1c\xff7\xff8\xff5\xff\xff\xfe\xd2\xfe\xb5\xfe\x8c\xfe\x86\xfe\xba\xfe\xfa\xfe\r\xff\x10\xff\xf1\xfe\xe1\xfe\xd0\xfe\xb4\xfe\xb5\xfe\xba\xfe\xc5\xfe\xe4\xfe\r\xff.\xffK\xffa\xffw\xff\x8f\xff\xb9\xff\xda\xff\xe8\xff\xfb\xff\t\x005\x00[\x00i\x00_\x00 \x00\xe2\xff\x97\xff?\xff\x08\xff\r\xffi\xff\xdc\xff%\x00L\x00S\x008\x00\x03\x00\xcf\xff\xa3\xff\x8a\xff\x99\xff~\xff5\xff*\xff\xf7\xfe\x90\xfee\xfeq\xfe\xc2\xfe\x0f\xff0\xffW\xffC\xff\xf8\xfe\xbe\xfeo\xfe(\xfe\xf1\xfd\xc4\xfd\x90\xfdo\xfdw\xfd\x9d\xfd\xf9\xfdH\xfeq\xfe\x83\xfe[\xfe\x05\xfe\xbf\xfd\x92\xfdl\xfdq\xfd\xb7\xfd\x19\xfeS\xfeP\xfeH\xfeJ\xfed\xfe}\xfe\xa8\xfe\x06\xffa\xff\xa0\xff\xbd\xff\xd7\xff\xdc\xff\xd4\xff\xd0\xff\xc8\xff\xc8\xff\xcf\xff\xde\xff\xe2\xff\xdb\xff\xce\xff\xf0\xff)\x00c\x00\xad\x00\xec\x00&\x01>\x019\x01\x1a\x01\xd4\x00\xae\x00\x90\x00R\x00\'\x00\n\x00\x13\x00_\x00\xca\x00\x1c\x01^\x01\x8a\x01\x87\x01e\x01\x1c\x01\xf8\x00\xe9\x00\xf7\x001\x01J\x01d\x01q\x01^\x01R\x01U\x01I\x01>\x01<\x014\x01&\x01\x14\x01\xd6\x00\x90\x00e\x00J\x00;\x00)\x00#\x00\x1f\x00\x0c\x00\xfd\xff\xda\xff\x98\xff\x9c\xff\x8e\xffs\xff\x91\xff\x92\xff\x8d\xff\xa4\xff\xc1\xff\xc5\xff\xa2\xff]\xff\xf8\xfe\xa6\xfer\xfes\xfe\xb4\xfe\x18\xff\x81\xff\xe5\xff,\x00\x14\x00\xc7\xffY\xff\xee\xfe\xa0\xfem\xfet\xfe\x9e\xfe\xbe\xfe\xf9\xfe?\xffZ\xffq\xffu\xffq\xff\x8a\xff\x99\xff\xa4\xff\xa2\xff\xcf\xff\xed\xff\xe1\xff\x13\x00"\x002\x00J\x003\x00\x16\x00\xef\xff\xde\xff\xcc\xff\xe6\xff\x15\x00@\x00\x9a\x00\xff\x00:\x01C\x018\x01\x14\x01\xd8\x00\xa6\x00v\x00N\x00P\x00O\x00f\x00\x95\x00'
#             )
#         ff.append(
#             b'\x08\xff\xf0\xfe\xf6\xfe+\xff\x82\xff\xac\xff\xa8\xff\x87\xffG\xff\x1c\xff\xf2\xfe\xd1\xfe\xa8\xfe}\xfe`\xfe?\xfe2\xfeh\xfe\xb6\xfe\x08\xffy\xff\xbd\xff\xbe\xffj\xff\xdc\xfex\xfe\x1e\xfe\xff\xfd<\xfe\x7f\xfe\xab\xfe\xdc\xfe\x10\xff%\xff$\xff*\xff/\xff<\xffC\xff\x18\xff\xe0\xfe\xb0\xfeh\xfe"\xfe\xf0\xfd\xc7\xfd\xc8\xfd\xe8\xfd\xfe\xfd\xfd\xfd\xe3\xfd\xb1\xfd\x8d\xfd|\xfd\xbb\xfd"\xfee\xfe\xc2\xfe\x03\xff+\xff:\xff\x1b\xff\n\xff\xef\xfe\xdb\xfe\xd2\xfe\xaf\xfe\xde\xfe\x14\xffO\xff\xa6\xff\xc1\xff\xfc\xff$\x00\x04\x00\xe8\xff\x9f\xffY\xff;\xffB\xff\x85\xff\xdc\xff"\x00e\x00\x7f\x00\x81\x00\x97\x00\xac\x00\xd2\x00\xfc\x00\xf9\x00\xd8\x00\x8c\x00+\x00\xfd\xff\xe3\xff\xd1\xff\xf2\xff\r\x00\x17\x00.\x00&\x00 \x00,\x007\x00N\x00\x82\x00\xb1\x00\xdd\x00 \x01+\x01\x19\x01\xf6\x00\x9d\x00Y\x00#\x00\x1f\x00I\x00q\x00\xa4\x00\xc3\x00\xde\x00\xc7\x00\xbe\x00\xd8\x00\xc5\x00\xa1\x00\x87\x00\x81\x00\x7f\x00|\x00\xa4\x00\xda\x00\xf1\x00\x04\x01\x12\x01+\x01J\x01`\x01\x82\x01\x9f\x01\x97\x01v\x01\x11\x01{\x00\xf4\xffw\xff%\xff\xf5\xfe\xfd\xfe2\xff{\xff\xeb\xff-\x00M\x00J\x00,\x00\x17\x00\n\x00!\x00S\x00\x8f\x00\xb5\x00\xa9\x00\x85\x00[\x00&\x00\x02\x00\x0f\x00#\x00K\x00l\x00\x86\x00\xa6\x00\xb3\x00\xc4\x00\xd6\x00\xd1\x00\xcd\x00\xc6\x00\xb6\x00\xb8\x00\xe8\x00E\x01\x90\x01\xc2\x01\xe6\x01\xf4\x01 \x02U\x02\x8e\x02\xe8\x02+\x038\x03\x16\x03\xdf\x02\xa9\x02p\x02V\x02T\x02q\x02\x97\x02\xca\x02\x07\x03:\x03L\x03E\x035\x03\xfd\x02\xc4\x02\x8f\x02r\x02V\x02\x1a\x02\xed\x01\xdf\x01\xb0\x01\x82\x01\x8e\x01\xb3\x01\xf8\x01U\x02b\x02T\x02O\x02 \x02\xe3\x01\xb4\x01\x9c\x01\x98\x01\x85\x01\x83\x01\xaa\x01\xf5\x01^\x02\xb4\x02\xe7\x02\xff\x02\xf0\x02\x9d\x02I\x02"\x02\n\x02#\x02p\x02\xb6\x02\xdb\x02\xd6\x02\xc4\x02\xac\x02\x90\x02\x8c\x02\xb1\x02\xd6\x02\x0c\x03]\x03\x89\x03\x8c\x03\x9d\x03\x9b\x03e\x03\x1c\x03\xeb\x02\xe6\x02\xcf\x02\xb5\x02\x91\x02B\x02#\x02G\x02m\x02\x89\x02\x8f\x02\x81\x02L\x02\x16\x02\xe8\x01\x9c\x01\x85\x01j\x01\x1a\x01\xdb\x00\x9f\x00\x8d\x00\xad\x00\xed\x00<\x01l\x01n\x01<\x01\xe7\x00\xa2\x00q\x00p\x00\xbe\x00\t\x01P\x01\x8d\x01\x9c\x01\x97\x01s\x01<\x01\'\x01-\x01;\x01S\x01f\x01|\x01\x90\x01|\x01Q\x01@\x01)\x010\x01@\x01E\x01I\x01G\x01G\x01B\x01M\x01S\x01j\x01\x8e\x01\xa0\x01\xcd\x01\xc3\x01\xa5\x01\x91\x01?\x01\xef\x00\xb3\x00x\x00P\x005\x00:\x00a\x00\x97\x00\xd7\x00\x00\x01\xfe\x00\xb9\x008\x00\xce\xff\x9e\xff\x81\xff~\xff\x99\xff\xdb\xff0\x00l\x00\x9c\x00\xbf\x00\xb4\x00\x9e\x00\xb7\x00\xdc\x00\x11\x01)\x01:\x01U\x01>\x016\x01@\x01P\x01b\x01i\x01Y\x01:\x01&\x01\'\x01G\x01y\x01\xb4\x01\xf0\x01<\x02\x95\x02\xdf\x02\xdc\x02q\x02\xfd\x01\xac\x01~\x01b\x01n\x01y\x01u\x01l\x01V\x01b\x01Z\x01O\x015\x01\xec\x00\x98\x00<\x00\xfb\xff\t\x007\x00u\x00\xbd\x00\xe8\x00\xfa\x00\xf4\x00\xd7\x00\xc9\x00\xf0\x00E\x01\x85\x01\x92\x01n\x01!\x01\xe8\x00\xc4\x00\xa7\x00\xb1\x00\xe4\x00\x06\x01&\x01P\x01h\x01h\x01L\x010\x017\x01U\x01\x98\x01\xf5\x01G\x02z\x02Q\x02\xe0\x01w\x01\x07\x01\xb5\x00\xa5\x00\xb6\x00\xf6\x00H\x01c\x01e\x01W\x012\x01\xf8\x00\xb7\x00|\x004\x00\x0e\x00\xf6\xff\xe6\xff,\x00n\x00\x9b\x00\xb0\x00\xab\x00\xb7\x00\x99\x00i\x00z\x00\x9a\x00\x82\x00<\x00\xe6\xff\x95\xff<\xff\x1e\xffB\xff\x8f\xff\x05\x00t\x00\xf1\x00_\x01\xa9\x01\xdd\x01\xf4\x01\x1f\x029\x02_\x02}\x02q\x02b\x02Q\x02/\x02\x0f\x02\x05\x02\x02\x026\x02f\x02~\x02\x97\x02y\x02Z\x02*\x02\xef\x01\xb4\x01t\x01Q\x010\x01-\x010\x01=\x01n\x01\x81\x01o\x015\x01\x06\x01\xfd\x00\xf2\x00\xe7\x00\xf6\x00\x1f\x01\x1d\x01\xf3\x00\x98\x00\x1b\x00\xb9\xffr\xff[\xff{\xff\xcd\xff+\x00\x94\x00\xde\x00\xdf\x00\xd4\x00\xba\x00\x9c\x00\x97\x00~\x00\x87\x00\xba\x00\xe0\x00\xf2\x00\xe9\x00\xdc\x00\xe2\x00\xd4\x00\xd8\x00!\x01{\x01\xc0\x01\xf8\x01\xe7\x01\xa3\x01e\x01\x02\x01\xc0\x00\xaa\x00\x99\x00\xb1\x00\xf1\x00%\x01v\x01\xc0\x01\xcb\x01\xac\x01C\x01\xe1\x00\x91\x00X\x00f\x00s\x00\x88\x00\xa6\x00\x8c\x00g\x00F\x002\x002\x00C\x00v\x00\x8c\x00\x8c\x00\x87\x00\x80\x00\x85\x00}\x00w\x00x\x00\x8d\x00\xa9\x00\xb9\x00\xca\x00\xdc\x00\xcc\x00\xb4\x00\xc2\x00\xd2\x00\t\x01s\x01\xd0\x01\x10\x02\x1c\x022\x029\x02\x15\x02 \x02\x0b\x02\xd5\x01\xcf\x01\xc3\x01\xc2\x01\xff\x01J\x02\x80\x02\xaa\x02\xa4\x02o\x02\x12\x02\x90\x01:\x01\x0b\x01\xd2\x00\xb7\x00\xba\x00\xca\x00\xc8\x00\xa3\x00\x86\x00t\x00?\x00\x1c\x00\x18\x00,\x00N\x00-\x00\x03\x00\xda\xff\x9c\xffn\xffF\xff+\xff\x1e\xff\x12\xff\x17\xff\x1a\xff2\xffD\xffG\xffp\xff\x94\xff\xc5\xff\x00\x00"\x00K\x00T\x009\x00\x13\x00\xe0\xff\xbd\xff\x94\xff|\xffv\xff\x9c\xff\xbe\xff\xf6\xff]\x00\x95\x00\x9e\x00\x9b\x00X\x00\xda\xffx\xff\x15\xff\xee\xfe\xfb\xfe\x16\xffX\xff\xa3\xff\xcd\xff\xca\xff\xc1\xff\x96\xffs\xff[\xff.\xff\x1b\xff\xf3\xfe\xd0\xfe\xb6\xfe\x9c\xfe\xa0\xfe\xb3\xfe\xe4\xfe\x01\xff\x16\xff\x1d\xff\x1b\xff%\xff\x1f\xff\x1c\xffI\xff\x96\xff\xd7\xff\xf4\xff\xf9\xff\xf0\xff\xc3\xff^\xff\xe4\xfe\xaf\xfe\x8d\xfe[\xfeS\xfe\x81\xfe\xb8\xfe\xe8\xfe\x19\xff*\xff\x0f\xff\xe9\xfe\xc0\xfe|\xfe)\xfe\xf2\xfd\xea\xfd!\xfe\x82\xfe\xea\xfeA\xffy\xff\x98\xff\x88\xffd\xffg\xffu\xffg\xff@\xff\x05\xff\xdb\xfe\xaa\xfeq\xfeR\xfeb\xfe~\xfe~\xfe\x8b\xfe\xba\xfe\xb5\xfe\x88\xfeo\xfeR\xfe\\\xfe~\xfe\xa4\xfe\xc6\xfe\xc8\xfe\xbb\xfe\x8f\xfe-\xfe\xc1\xfd\x86\xfd\x85\xfd\x9c\xfd\xca\xfd\x00\xfe:\xfe}\xfe\xbb\xfe\xdb\xfe\xe2\xfe\xd5\xfe\xae\xfe\x88\xfek\xfe%\xfe\xfb\xfd\xf2\xfd\xe9\xfd\x03\xfe\x1f\xfeN\xfeq\xfe|\xfe\x80\xfe{\xfe\x84\xfe\x8d\xfe\x7f\xfe\x84\xfeZ\xfe\xf9\xfd\xbf\xfd\x95\xfd\x9d\xfd\xe5\xfdB\xfe\xb0\xfe(\xffq\xff\x90\xff\x86\xffN\xff$\xff\x0e\xff\x1c\xff7\xff8\xff5\xff\xff\xfe\xd2\xfe\xb5\xfe\x8c\xfe\x86\xfe\xba\xfe\xfa\xfe\r\xff\x10\xff\xf1\xfe\xe1\xfe\xd0\xfe\xb4\xfe\xb5\xfe\xba\xfe\xc5\xfe\xe4\xfe\r\xff.\xffK\xffa\xffw\xff\x8f\xff\xb9\xff\xda\xff\xe8\xff\xfb\xff\t\x005\x00[\x00i\x00_\x00 \x00\xe2\xff\x97\xff?\xff\x08\xff\r\xffi\xff\xdc\xff%\x00L\x00S\x008\x00\x03\x00\xcf\xff\xa3\xff\x8a\xff\x99\xff~\xff5\xff*\xff\xf7\xfe\x90\xfee\xfeq\xfe\xc2\xfe\x0f\xff0\xffW\xffC\xff\xf8\xfe\xbe\xfeo\xfe(\xfe\xf1\xfd\xc4\xfd\x90\xfdo\xfdw\xfd\x9d\xfd\xf9\xfdH\xfeq\xfe\x83\xfe[\xfe\x05\xfe\xbf\xfd\x92\xfdl\xfdq\xfd\xb7\xfd\x19\xfeS\xfeP\xfeH\xfeJ\xfed\xfe}\xfe\xa8\xfe\x06\xffa\xff\xa0\xff\xbd\xff\xd7\xff\xdc\xff\xd4\xff\xd0\xff\xc8\xff\xc8\xff\xcf\xff\xde\xff\xe2\xff\xdb\xff\xce\xff\xf0\xff)\x00c\x00\xad\x00\xec\x00&\x01>\x019\x01\x1a\x01\xd4\x00\xae\x00\x90\x00R\x00\'\x00\n\x00\x13\x00_\x00\xca\x00\x1c\x01^\x01\x8a\x01\x87\x01e\x01\x1c\x01\xf8\x00\xe9\x00\xf7\x001\x01J\x01d\x01q\x01^\x01R\x01U\x01I\x01>\x01<\x014\x01&\x01\x14\x01\xd6\x00\x90\x00e\x00J\x00;\x00)\x00#\x00\x1f\x00\x0c\x00\xfd\xff\xda\xff\x98\xff\x9c\xff\x8e\xffs\xff\x91\xff\x92\xff\x8d\xff\xa4\xff\xc1\xff\xc5\xff\xa2\xff]\xff\xf8\xfe\xa6\xfer\xfes\xfe\xb4\xfe\x18\xff\x81\xff\xe5\xff,\x00\x14\x00\xc7\xffY\xff\xee\xfe\xa0\xfem\xfet\xfe\x9e\xfe\xbe\xfe\xf9\xfe?\xffZ\xffq\xffu\xffq\xff\x8a\xff\x99\xff\xa4\xff\xa2\xff\xcf\xff\xed\xff\xe1\xff\x13\x00"\x002\x00J\x003\x00\x16\x00\xef\xff\xde\xff\xcc\xff\xe6\xff\x15\x00@\x00\x9a\x00\xff\x00:\x01C\x018\x01\x14\x01\xd8\x00\xa6\x00v\x00N\x00P\x00O\x00f\x00\x95\x00'
#             )
#
#         wf.writeframes(b''.join(ff))
#         wf.close()



        self.__abort = True

class VerifyWindow(QMainWindow,Ui_verifyWindow):
    def __init__(self, parent=None):
        super(VerifyWindow, self).__init__(parent)
        self.setupUi(self)
        self.runVerify()

    def runVerify(self):
        print('Run verify')
        p = subprocess.Popen(["./test.sh","-p"], shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        (stdoutput, erroutput) = p.communicate()
        str = stdoutput.decode("utf-8")
        self.infoText.setPlainText(str)


class AudioBase(QMainWindow, Ui_MainWindow):

    sig_abort_workers = pyqtSignal()

    def __init__(self, parent=None):

        super(AudioBase, self).__init__(parent)
        self.setupUi(self)
        self.initUi()

        # Make any cross object connections.
        self._connectSignals()
        QThread.currentThread().setObjectName('main')  # threads can be named, useful for log output
        self.__threads = None


    def _connectSignals(self):
        ## 放btn connect function
        self.startBtn.clicked.connect(self.startRecord)
        self.stopBtn.clicked.connect(self.abort_workers)

    def initUi(self):
        # PushButton
        self.startBtn.setEnabled(True)
        self.stopBtn.setDisabled(True)
        # GraphicsView
        self.graphicsView.paused = False
        self.graphicsView.logScale = False
        self.graphicsView.showPeaks = False
        self.graphicsView.downsample = True

        self.graphicsView.p1 = self.graphicsView.addPlot()
        self.graphicsView.p1.setLabel('bottom', 'RowData', 'PCM')
        self.graphicsView.p1.setYRange(0,500)

    def get_spectrum(self, data):
        T = 1.0/RATE
        N = data.shape[0]
        Pxx = (1./N)*np.fft.fft(data)
        f = np.fft.fftfreq(N,T)
        Pxx = np.fft.fftshift(Pxx)
        f = np.fft.fftshift(f)
        return f.tolist(), (np.absolute(Pxx)).tolist()

    def startRecord(self):
        self.startBtn.setDisabled(True)
        self.stopBtn.setEnabled(True)

        self.__threads = []

        # create a recorder object
        record = Recorder()
        record_thread = QThread()
        record_thread.setObjectName('record thread')
        self.__threads.append((record_thread, record))  # need to store worker too otherwise will be gc'd

        record.moveToThread(record_thread)

        # get progress messages from worker:
        record.sig_step.connect(self.on_worker_step)

        # control worker:
        self.sig_abort_workers.connect(record.abort)

        # get read to start worker:

        record_thread.started.connect(record.work)
        record_thread.start()  # this will emit 'started' and start thread's event loop

    @pyqtSlot(np.ndarray)
    def on_worker_step(self,r_data):
        # draw gui chart
        f, Pxx = self.get_spectrum(r_data)
        self.graphicsView.p1.plot(x=f, y=Pxx, clear=True)


    @pyqtSlot()
    def abort_workers(self):
        self.sig_abort_workers.emit()
        print('Asking each worker to abort')
        for record_thread, record in self.__threads:  # note nice unpacking by Python, avoids indexing
            record_thread.quit()  # this will quit **as soon as thread event loop unblocks**
            record_thread.wait()  # <- so you need to wait for it to *actually* quit
        self.stopBtn.setDisabled(True)
        # even though threads have exited, there may still be messages on the main thread's
        # queue (messages that threads emitted before the abort):
        print('All threads exited')

        # TODO : DEBUG
        self.verify = VerifyWindow(self)
        self.verify.show()




if __name__ == '__main__':
    import sys

    app = QApplication(sys.argv)
    app.setApplicationName("Audio Device Test")

    audio = AudioBase()
    audio.show()

    sys.exit(app.exec_())